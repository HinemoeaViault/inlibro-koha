[% INCLUDE 'doc-head-open.inc' %]
<!-- Head-->
<title>Koha:ChangeDueDate Plugin</title>
[% INCLUDE 'doc-head-close.inc' %]
<script type="text/javascript" src="[% PLUGIN_PATH %]/js/jquery-ui.min.js"></script>
<link rel="stylesheet" type="text/css" href="[% PLUGIN_PATH %]/css/jquery-ui.min.css" />
<!-- Body-->
[% INCLUDE 'header.inc' %]
[% INCLUDE 'cat-search.inc' %]
<div id="breadcrumbs"><a href="/cgi-bin/koha/mainpage.pl">Home</a> &rsaquo; <a href="/cgi-bin/koha/plugins/plugins-home.pl">Plugins</a> &rsaquo; ChangeDueDate</div>
<div id="doc3">
    <div id="content">

        <div id="inlibro-header" style="font-size: 14px; color: #696969; width: 450px;">
            <p style="text-align: left;">Plugin created by</p>
            <img width='450px' src='[%PLUGIN_PATH%]/images/inLibro_en.svg'/>
            <p style="text-align: right;">Visit our <a href="https://inlibro.com/en/">website</a> for more Koha plugins</p>
        </div>

        <h2>Change return date</h2>
        <form method="get" name ="myForm" onsubmit="return validateForm()">
            <!-- Necessary for the plugin to run, do not remove  -->
            <input type="hidden" name="class" value="[% CLASS %]"/>
            <input type="hidden" name="method" value="[% METHOD %]"/>
            <input type="hidden" name="action" value="configure"/>
            <!-- end of plugin necessary inputs  -->


            <div class="filters">
                <div class="filter">
                    <label class="filterDescription"> Category of borrower : </label>
                    <select name="categories" id ="categories" class="alignment">
                        <option  value="none"> None</option>
                        [% FOREACH category IN categories %]
                        <option  value="[% category.categorycode %]"> [% category.categorycode %] - [% category.description %]</option>
                        [% END %]
                    </select>
                </div>

                <div class="filter">
                    <label class="filterDescription"> List of item types : </label>
                    <select name="itemTypes" id ="itemTypes" class="alignment">
                        <option value="none"> None</option>
                        [% FOREACH itemType IN itemTypes %]
                        <option value="[% itemType.itemtype %]"> [% itemType.itemtype %] - [% itemType.description %]</option>
                        [% END %]
                    </select>
                </div>

                <div class="filter">
                    <label class="filterDescription">Borrower number :</label>
                    <div name="borrowers" id ="borrowers" class="alignment">
                        <input type="number" name="borrowerFrom" id="borrowerFrom" onchange="checkValue()" placeholder="From"/>
                        <input type="number" name="borrowerTo" id="borrowerTo" placeholder="To"/>
                    </div>
                </div>

                <div class="filter">
                    Expected return date :
                    <div class="alignment">
                        <input type="text" name="ExpecReturnFromDate" id="ExpecReturnFromDate" class="datepicker" onchange="checkValue()" placeholder="From"/>
                        <input type="text" name="ExpecReturnToDate" id="ExpecReturnToDate" class="datepicker" placeholder="To"/>
                    </div>
                </div>

                <div class="filter">
                    Checkout date :
                    <div class="alignment">
                        <input type="text" name="ExpecCheckoutFromDate" id="ExpecCheckoutFromDate" class="datepicker" onchange="checkValue()" placeholder="From"/>
                        <input type="text" name="ExpecCheckoutToDate" id="ExpecCheckoutToDate" class="datepicker" placeholder="To"/>
                    </div>
                </div>

            </div>

            <br><br>
            <div class="newReturnDate">
                New return date: <input type="text" name="newDate" id="newDate" class="datepicker">
            </div>

            <input id="submit" type="submit" value="Change"/>
        </form>


    </div>
</div>
<!-- Footer-->
[% INCLUDE 'intranet-bottom.inc' %]

<style>

#content{
    width: 500px;
}

select{
    width: 70%;
}
.alignment{
    float:right;
    margin: 0;
    padding: 0;
}
.filter{
    margin-top: 2%;
    padding-top: 2%
}
#submit{
    font-weight: bold;
    height:25px;
}
</style>


<script>
$(function() {
    $( "#ExpecReturnFromDate" ).datepicker();
    $( "#ExpecReturnToDate" ).datepicker();

    $( "#ExpecCheckoutFromDate" ).datepicker();
    $( "#ExpecCheckoutToDate" ).datepicker();

    $( "#newDate" ).datepicker();

    $( ".datepicker" ).datepicker( "option", "dateFormat", "yy-mm-dd" );
});
function checkValue(){
    var ExpecReturnFromDate = document.getElementById('ExpecReturnFromDate').value;
    var ExpecCheckoutFromDate = document.getElementById('ExpecCheckoutFromDate').value;
    var borrowerFrom = document.getElementById('borrowerFrom').value;

    if(ExpecReturnFromDate ==''){
        document.getElementById('ExpecReturnToDate').disabled = true;
    } else{
        document.getElementById('ExpecReturnToDate').disabled = false;
    }

    if(ExpecCheckoutFromDate ==''){
        document.getElementById('ExpecCheckoutToDate').disabled = true;
    } else{
        document.getElementById('ExpecCheckoutToDate').disabled = false;
    }

    if(borrowerFrom ==''){
        document.getElementById('borrowerTo').disabled = true;
    } else{
        document.getElementById('borrowerTo').disabled = false;
    }
    if (borrowerFrom <=0 && borrowerFrom !=''){
        alert("value of borrower can not be less than 1");
        document.getElementById('borrowerFrom').value =null;
        document.getElementById('borrowerTo').disabled = true;
    }


}
checkValue();
function validateForm(){
    var borrower = document.forms["myForm"]["borrowerFrom"].value;
    var itemTypes = document.forms["myForm"]["itemTypes"].value;
    var categories = document.forms["myForm"]["categories"].value;
    var ExpecReturnFromDate = document.getElementById('ExpecReturnFromDate').value;
    var ExpecCheckoutFromDate = document.getElementById('ExpecCheckoutFromDate').value;
    var newDate = document.getElementById('newDate').value;
    var check = true;
    var message;

    if (newDate=="") {
        message ="The new return date is mandatory";
        check=false;
    }

    if(borrower == "" && itemTypes == "none" && categories == "none" && ExpecReturnFromDate =='' && ExpecCheckoutFromDate==''){
        message ="You have to use atleast one filter";
        check= false;

    }
    if(!check)
    alert(message);


    return check;
}
</script>
